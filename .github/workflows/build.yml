name: SonarCloud Analysis

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and Analyze
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install GCC 12
        run: sudo apt-get update && sudo apt-get install -y gcc-12 g++-12

      - name: Use GCC 12
        run: |
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 100 \
                                   --slave /usr/bin/g++ g++ /usr/bin/g++-12

      - name: Install dependencies
        run: sudo apt-get install -y build-essential libncurses-dev

      - name: Download and prepare build-wrapper
        run: |
          wget https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip
          unzip build-wrapper-linux-x86.zip
          chmod +x build-wrapper-linux-x86/build-wrapper-linux-x86-64
          mkdir -p bw-output

      - name: Configure readline
        run: |
          cd libraries/readline-8.2
          ./configure --prefix=$GITHUB_WORKSPACE/libraries/readline
          make
          make install
          cd ../..

      - name: Clean project
        run: make fclean || true

      - name: Build with build-wrapper
        run: |
          ./build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir bw-output make re

      - name: Check compile_commands.json
        run: |
          if [ ! -f bw-output/compile_commands.json ]; then
            echo "❌ compile_commands.json not found!"
            exit 1
          else
            echo "✅ compile_commands.json found."
            head -n 20 bw-output/compile_commands.json
          fi

      - name: Run SonarCloud analysis
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=qa_test_minishell
            -Dsonar.organization=your_org_name
            -Dsonar.cfamily.build-wrapper-output=bw-output
            -Dsonar.sources=.
