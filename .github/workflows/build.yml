name: SonarCloud Analysis

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Analyze
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install build dependencies
        run: sudo apt-get update && sudo apt-get install -y build-essential libncurses-dev

      - name: Build and install readline locally
        run: |
          cd libraries/readline-8.2
          ./configure --prefix=$GITHUB_WORKSPACE/libraries/readline
          make
          make install
          cd ../..

      - name: Download and prepare build-wrapper
        run: |
          wget https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip
          unzip build-wrapper-linux-x86.zip
          chmod +x build-wrapper-linux-x86/build-wrapper-linux-x86-64

      - name: Manual build using build-wrapper
        run: |
          rm -rf bw-output objects minishell
          mkdir -p objects
          ./build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir bw-output bash -c '
            for file in sources/*.c; do
              echo ">>> compiling: $file"
              gcc -Wall -Wextra -Werror -g -std=c99 \
                -I$GITHUB_WORKSPACE/includes \
                -I$GITHUB_WORKSPACE/libraries/readline/include \
                -c "$file" -o "objects/$(basename "${file%.c}.o")"
            done

            gcc -Wall -Wextra -Werror -g -std=c99 \
              -I$GITHUB_WORKSPACE/includes \
              -I$GITHUB_WORKSPACE/libraries/readline/include \
              -o minishell objects/*.o \
              -L$GITHUB_WORKSPACE/libraries/readline/lib -lreadline -lncurses
          '

      - name: Preview build-wrapper-dump.json
        run: head -n 50 bw-output/build-wrapper-dump.json || echo "No dump found"

      - name: Run SonarCloud analysis
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=RafPetrosyan_qa_test_minishell
            -Dsonar.organization=rafpetrosyan
            -Dsonar.sources=.
            -Dsonar.cfamily.compile-commands=bw-output/compile_commands.json
